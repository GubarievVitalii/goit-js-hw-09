{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAChCC,EAAUH,EAAOI,SAASC,MAC1BC,EAASN,EAAOI,SAASG,KACzBC,EAAWR,EAAOI,SAASK,OAcjC,SAASC,EAAcC,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUN,UAEpBS,EAAO,CAAEH,WAAUN,YAEpBA,MAIP,SAASa,EAAUC,G,IAAER,EAAFQ,EAAER,SAAUN,EAAZc,EAAYd,MAC7Be,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAoCC,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,OAClEmB,QAAQC,IAAI,qBAAoCF,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,OAExD,SAASqB,EAAQP,G,IAAER,EAAFQ,EAAER,SAAUN,EAAZc,EAAYd,MAC3Be,EAAAtB,GAASuB,OAAOM,QAAQ,oBAAmCJ,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,OACjEmB,QAAQC,IAAI,oBAAmCF,OAAfZ,EAAS,QAAYY,OAANlB,EAAM,OA/BvDL,EAAO4B,iBAAiB,UAExB,SAAoBC,GAClBA,EAAMC,iBAGN,IAFA,IAAIzB,EAAQ0B,OAAO5B,EAAQ6B,OAElBC,EAAI,EAAGA,GAAKF,OAAOvB,EAASwB,OAAQC,IAC3CvB,EAAcuB,EAAG5B,GAAO6B,KAAKhB,GAAWiB,MAAMT,GAC9CrB,GAAS0B,OAAOzB,EAAO0B,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\nconst delayEl = formEl.elements.delay;\nconst stepEl = formEl.elements.step;\nconst amountEl = formEl.elements.amount;\n\nformEl.addEventListener('submit', formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  let delay = Number(delayEl.value);\n\n  for (let i = 1; i <= Number(amountEl.value); i++) {\n    createPromise(i, delay).then(onSuccess).catch(onError);\n    delay += Number(stepEl.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  console.log(`Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  console.log(`Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","elements","delay","$ce04d3a99e08e73b$var$stepEl","step","$ce04d3a99e08e73b$var$amountEl","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$onSuccess","param","$parcel$interopDefault","Notify","success","concat","console","log","$ce04d3a99e08e73b$var$onError","failure","addEventListener","event","preventDefault","Number","value","i","then","catch"],"version":3,"file":"03-promises.a51f673a.js.map"}